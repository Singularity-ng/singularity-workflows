import Config

# Configure your database
config :singularity_workflow, Singularity.Workflow.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "singularity_workflow_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :singularity_workflow, Singularity.Workflow.Web.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  https: [
    ip: {127, 0, 0, 1},
    port: 4000,
    cipher_suite: :strong,
    keyfile: "priv/cert/selfsigned_key.pem",
    certfile: "priv/cert/selfsigned.pem"
  ],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "your_secret_key_base_here",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# HTTPS is enabled by default in development. A self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `https:` config above can be replaced with `http:` if
# HTTPS is not desired:
#
#     http: [ip: {127, 0, 0, 1}, port: 4000],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :singularity_workflow, Singularity.Workflow.Web.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/singularity_workflow_web/(live|views)/.*(ex)$",
      ~r"lib/singularity_workflow_web/templates/.*(eex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :singularity_workflow, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Orchestrator development configuration
config :singularity_workflow, :orchestrator,
  # Enable debug logging for development
  debug: true,

  # More lenient timeouts for development
  timeout: 600_000,
  execution: %{
    timeout: 600_000,
    task_timeout: 60_000
  },

  # Enable all features for development
  features: %{
    monitoring: true,
    optimization: true,
    notifications: true,
    learning: true,
    real_time: true
  },

  # More verbose logging
  notifications: %{
    enabled: true,
    real_time: true,
    event_types: [:decomposition, :task, :workflow, :performance],
    queue_prefix: "orchestrator_dev",
    timeout: 10_000
  }
