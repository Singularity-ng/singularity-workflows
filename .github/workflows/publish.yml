name: Publish to Hex.pm

on:
  push:
    tags:
      - 'v*'

jobs:
  # First job: Run CI tests
  ci:
    name: CI Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        # Use pgmq image with PostgreSQL 16 and pgmq pre-installed
        # This is the official pgmq development image from Tembo
        image: ghcr.io/tembo-io/pgmq-pg:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ex_pgflow_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14'
        otp-version: '26'

    - name: Setup database with pgmq
      run: |
        # Install psql client to connect to the container
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        # pgmq is pre-installed in ghcr.io/tembo-io/pgmq-pg image
        PGPASSWORD=postgres psql -h localhost -U postgres -d ex_pgflow_test -c "CREATE EXTENSION IF NOT EXISTS pgmq;"

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Run tests
      run: mix test
      env:
        MIX_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: ex_pgflow_test
        POSTGRES_HOST: localhost

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Run security audit
      run: mix sobelow --exit-on-warning

  # Second job: Require manual approval
  approve:
    name: Release Approval
    needs: ci
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Release approved
      run: echo "Release approved by ${{ github.actor }}"

  # Third job: Publish to Hex.pm
  publish:
    name: Publish to Hex.pm
    needs: [ci, approve]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.14'
        otp-version: '26'

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Publish to Hex.pm
      run: mix hex.publish --yes
      env:
        HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: CHANGELOG.md
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}